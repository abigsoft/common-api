<?php

namespace app\user\controller;

use app\common\model\ApiModel;
use app\common\model\PayOrderModel;
use app\common\model\ProjectApiModel;
use app\common\service\OrderService;
use app\common\service\PayService;
use app\exception\ParamException;
use think\App;
use think\View;

class Api extends Base
{
    protected $project_id;

    function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->project_id = $this->request->param('project_id', 0);
        $this->assign('project_id', $this->project_id);
        $this->assign('api_list', ApiModel::where('status', 1)->column('id,title'));
    }

    function index()
    {
        if (!$this->request->isAjax()) {
            return view('index');
        } else {
            $limit = $this->request->post('limit');
            $offset = $this->request->post('offset');
            $page = floor($offset / $limit) + 1;

            $where['a.project_id'] = $this->project_id;

            $where['a.api_id'] = $this->request->param('api_id', '');
            $where['a.desc'] = ['like', $this->request->param('keywords', '')];
            $where['a.status'] = $this->request->param('status', '');

            $order = $this->request->post('order');    //排序字段 bootstrap-table 传入
            $sort = $this->request->post('sort');        //排序方式 desc 或 asc

            $order = ($sort && $order) ? $sort . ' ' . $order : 'id desc';

            $res = ProjectApiModel::alias('a')->where(formatWhere($where))
                ->join('api b', 'a.api_id = b.id')
                ->where('b.delete_time', null)
                ->where('a.member_id', $this->member_id)
                ->field('a.*,b.title api_title,b.price')
                ->order($order)
                ->paginate(['list_rows' => $limit, 'page' => $page])
                ->toArray();
            return json(['rows' => $res['data'], 'total' => $res['total']]);
        }
    }

    function status(): \think\response\Json
    {
        $postField = 'id,status';
        $data = $this->request->only(explode(',', $postField), 'param', null);
        if (!$data['id'])
            $this->error('参数错误');
        ProjectApiModel::where('id', $data['id'])
            ->where('member_id', $this->member_id)
            ->where('project_id', $this->project_id)
            ->update(['status' => $data['status']]);
        return $this->ajaxReturn($this->successCode, '操作成功');
    }

    function update()
    {
        $id = $this->request->param('id', 0);
        if (!$this->request->isPost()) {
            $this->view->assign('id', $id);
            $info = ProjectApiModel::where('member_id', $this->member_id)
                ->where('project_id', $this->project_id)
                ->where('id', $id)
                ->find() ?: new ProjectApiModel();
            $this->view->assign('info', $info);
            return view('update');
        } else {
            $data = $this->request->only([
                'api_id' => 0,
                'desc' => '',
                'status' => 0,
            ], 'param', null);
            if ($id) {
                unset($data['api_id']);
                ProjectApiModel::where('id', $id)
                    ->where('member_id', $this->member_id)
                    ->where('project_id', $this->project_id)
                    ->update($data);
            } else {
                $api_info = ApiModel::where('id',$data['api_id'])->where('status',1)->find();
                if(!$api_info){
                    throw new ParamException('接口已禁用或不存在');
                }
                $check = ProjectApiModel::where('project_id',$this->project_id)
                    ->where('api_id',$data['api_id'])
                    ->count();
                if($check > 0){
                    throw new ParamException('该项目已开通过该接口');
                }
                $data['member_id'] = $this->member_id;
                $data['project_id'] = $this->project_id;
                $data['limit_date'] = formatDate();
                $data['today_count'] = 0;
                $data['day_limit_count'] = $api_info['default_day_limit'];
                ProjectApiModel::create($data);
            }

            return $this->ajaxReturn($this->successCode, '提交成功');
        }
    }

    function delete()
    {
        $idx = $this->request->param('id');
        if (!$idx) $this->error('参数错误');
        ProjectApiModel::destroy([
            'id' => explode(',', $idx),
            'member_id' => $this->member_id,
            'project_id' => $this->project_id,
        ]);
        return $this->ajaxReturn($this->successCode, '操作成功');
    }

    function recharge()
    {
        $id = $this->request->param('id', 0);
        $info = ProjectApiModel::where('member_id', $this->member_id)
            ->where('id', $id)
            ->where('project_id', $this->project_id)
            ->find();
        if (!$info) {
            $this->error('数据不存在，请刷新重试');
        }
        $api_info = ApiModel::where('id', $info['api_id'])->where('status', 1)->find();
        if (!$api_info) {
            $this->error('接口已禁用或不存在');
        }
        if (!$this->request->isPost()) {
            $this->view->assign('info', $info);
            $this->view->assign('api', $api_info);
            return view('recharge');
        }

        $order_num = $this->request->param('num',1,'intval');
        $pay_type = $this->request->param('pay_type','wxpay');

        $price = decimal($order_num * $api_info['price']);
        $res = PayOrderModel::create([
            'order_sn'=>doOrderSn(1),
            'member_id'=>$this->member_id,
            'title'=>$api_info['title'] . '接口包月',
            'order_type'=>1,
            'pay_type'=>$pay_type,
            'order_num'=>$order_num,
            'order_money'=>$price,
            'pay_money'=>$price,
            'order_code'=>'',
            'transaction_id'=>'',
            'create_time'=>formatDate(),
            'end_time'=>formatDate(time() + 900),
            'pay_time'=>null,
            'status'=>0,
            'other'=>$id,
        ]);
        if($api_info['price'] > 0){
            $url = PayService::doPay($res->id);
            return $this->ajaxReturn($this->successCode,'跳转支付',$url);
        }else{
            OrderService::realOrder($res->id);
            return $this->ajaxReturn($this->successCode,'提交成功','');
        }
    }
}